"Document Title",Authors,"Author Affiliations","Publication Title",Date Added To Xplore,"Publication Year","Volume","Issue","Start Page","End Page","Abstract","ISSN",ISBNs,"DOI",Funding Information,PDF Link,"Author Keywords","IEEE Terms","INSPEC Controlled Terms","INSPEC Non-Controlled Terms","Mesh_Terms",Article Citation Count,Patent Citation Count,"Reference Count","License",Online Date,Issue Date,"Meeting Date","Publisher",Document Identifier
"Evaluation of NoSQL prototypes for the CMS conditions database","R. Sipos",CMS Collaboration,"2015 IEEE Nuclear Science Symposium and Medical Imaging Conference (NSS/MIC)","6 Oct 2016","2015","","","1","7","With the restart of the LHC in 2015, the growth of the CMS conditions dataset will continue, therefore the need of a consistent and highly available access to the conditions makes a great cause to revisit different aspects of the current data storage solutions. We present a study of alternative data storage backends for the CMS Conditions Databases, evaluating some of the most popular NoSQL ones to support a key-value representation of the CMS conditions. In addition to the baseline performance comparison between a document store, a column-oriented, and a plain key-value store, the access layer for these databases in the CMS software was developed, in order to provide transparent support for these alternative data stores in the CMS context. The necessary changes in the software infrastructure, and in the modeling approaches are also discussed in this paper. We also discuss the validation phase, which plays a key role in the optimization of the different solutions with fine-tuning critical performance factors. In this paper we present a performance comparison between the NoSQL prototypes and the current Oracle solution, using the real dataset, accessed by the CMS software framework.","","978-1-4673-9862-6","10.1109/NSSMIC.2015.7581881","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7581881","","Testing;Payloads;Software;Distributed databases;Routing;Prototypes","relational databases;storage management","NoSQL prototype evaluation;CMS condition database;data storage backends;key-value representation;document store;plain key-value store;column-oriented store;fine-tuning critical performance factors;Oracle solution;CMS software framework","","","","11","","6 Oct 2016","","","IEEE","IEEE Conferences"
"Design and implementation of hardware cache mechanism and NIC for column-oriented databases","A. Hamada; H. Matsutani","Dept. of ICS, Keio University, 3-14-1 Hiyoshi, Kohoku-ku, Yokohama, Japan; Dept. of ICS, Keio University, 3-14-1 Hiyoshi, Kohoku-ku, Yokohama, Japan","2016 International Conference on ReConFigurable Computing and FPGAs (ReConFig)","16 Feb 2017","2016","","","1","6","Recently some researches to utilize big data efficiently have been made vigorously. To store and process big data, structured storages (NOSQLs) that have high degree of horizontal scalability have attracted a lot of attention. Key-value stores and column-oriented stores are known as famous examples of structured storages. Especially, column-oriented stores can store variable numbers of columns for each row while maintaining high scalability. Moreover, range queries (scan operations) are supported in column-oriented stores. This paper proposes hardware cache mechanism using FPGA NIC to accelerate column-oriented databases. In this paper, it is assumed that column-oriented stores running on database servers are accessed by clients via a network. This paper aims to improve performance and power efficiency of column-oriented stores by introducing an FPGA-based 10GbE network interface (NIC) and a hardware cache mechanism (HBC) implemented on the NIC. HBC stores query results (sorted rows) as a key-value form in the DRAM implemented on the FPGA NIC, and the requested data can be returned to clients immediately if the query result has been cached. Existing work that aims to accelerate structured storages by hardware have focused only on key-value stores while column-oriented stores that support range queries (scan operations) have not been addressed. HBC deploys methods that address data mappings and range queries of caches using specific data structures that can be represented in binary-tree forms and this paper shows HBC can accelerate range queries by hardware. In experiments of this paper, HBase is running on an application layer, while HBC is implemented on an FPGA-based NIC. This paper shows that improvement of power efficiency and significant performance improvement can be achieved by the proposed HBC and also pros and cons of the proposed HBC are discussed.","","978-1-5090-3707-0","10.1109/ReConFig.2016.7857164","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7857164","","Field programmable gate arrays;Hardware;Databases;Acceleration;Software;Random access memory;Servers","Big Data;cache storage;client-server systems;data structures;field programmable gate arrays;network interfaces;query processing;relational databases;SQL","hardware cache mechanism;column-oriented databases;Big Data;structured storages;NOSQL;horizontal scalability;column-oriented stores;FPGA NIC;database servers;power efficiency;FPGA-based network interface;HBC;query results;DRAM;data mappings;data structures;binary-tree forms;HBase","","","","13","","16 Feb 2017","","","IEEE","IEEE Conferences"
"Columnar NoSQL CUBE: Agregation operator for columnar NoSQL data warehouse","K. Dehdouh; F. Bentayeb; O. Boussaid; N. Kabachi","ERIC laboratory, University of Lyon 2, 5 avenue Pierre Mendes-France, 69676 Bron Cedex, France; ERIC laboratory, University of Lyon 2, 5 avenue Pierre Mendes-France, 69676 Bron Cedex, France; ERIC laboratory, University of Lyon 2, 5 avenue Pierre Mendes-France, 69676 Bron Cedex, France; ERIC laboratory, University of Lyon 2, 5 avenue Pierre Mendes-France, 69676 Bron Cedex, France","2014 IEEE International Conference on Systems, Man, and Cybernetics (SMC)","4 Dec 2014","2014","","","3828","3833","The emergence of large volumes of data imposed by the major players of the web requires new management models and new data storage architectures and treatment able to find information quickly in a large volume of data. The column-oriented NoSQL (Not Only SQL) database provide for big data the most suitable model to the data warehouse and the structure of multidimensional data in OLAP cube form. However, in the absence of OLAP cube computation operators, we propose in this paper, a new aggregation operator called CN-CUBE (Columnar NoSQL CUBE), which allows data cubes to be computed from data warehouses stored in column-oriented NoSQL database management system. We implemented the CNCUBE operator using the SQL Phoenix interface of HBase DBMS and conducted experiments on a public data warehouse in a distributed environment produced using the Hadoop platform. Thus we have shown that our CN-CUBE operator has OLAP cubes computation times very suitable for NoSQL warehouses.","1062-922X","978-1-4799-3840-7","10.1109/SMC.2014.6974527","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6974527","","Accidents;Data warehouses;Distributed databases;Big data;Roads;Data models","data structures;data warehouses;distributed databases;Internet;public domain software;software architecture;SQL;storage management","columnar NoSQL cube;aggregation operator;columnar NoSQL data warehouse;Web;management models;data storage architectures;column-oriented NoSQL database;column-oriented not only SQL database;multidimensional data structure;OLAP cube form;CN-CUBE operator;SQL Phoenix interface;HBase DBMS;Hadoop platform;online analytical processing","","15","","20","","4 Dec 2014","","","IEEE","IEEE Conferences"
"Multiple Nested Schema of HBase for Migration from SQL","G. Zhao; L. Li; Z. Li; Q. Lin","Sch. of Comput. Sci., South China Normal Univ., Guangzhou, China; Sch. of Comput. Sci., South China Normal Univ., Guangzhou, China; Sch. of Comput. Sci., South China Normal Univ., Guangzhou, China; Sch. of Comput. Sci., South China Normal Univ., Guangzhou, China","2014 Ninth International Conference on P2P, Parallel, Grid, Cloud and Internet Computing","29 Jan 2015","2014","","","338","343","With the development of web application, the demand of query performance and expansion becomes increasingly necessary. Relational database seems hardly handling with this, more and more applications choose migrating to NoSQL database such as HBase. The features of high reliability, high performance, column-oriented storage, high scalability, and real-time read and write, won favor from public. In this paper, we use two concepts Nested and Multiple Nested to describe join keys reference relationship between tables in relational database. Because HBase only support the column family nest the column qualifier, it is hard to deal with the situation of Multiple Nested after data migration from relational database meanwhile ensure high query performance in transformed HBase. We propose a novel HBase schema for migrating from relational database to HBase, which supports multiple nested. With this schema in HBase, query only once on one table for any query is needed to get the data, and query efficiency has been greatly improved, especially for join query. Additionally, index migration is available in this scheme, which supports faster query. Finally, this paper proposes a mapping algorithm to find column name corresponding to attribute in relational database.","","978-1-4799-4171-1","10.1109/3PGCIC.2014.127","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7024606","Schema conversion;Multiple nested;SQL;HBase","Relational databases;Data models;Transforms;Algorithm design and analysis;Concrete;Cloud computing","query processing;relational databases;SQL","Web application;query performance;query expansion;relational database;NoSQL database;HBase;multiple nested schema;column family nest;column qualifier;data migration;query efficiency;join query;index migration;mapping algorithm;column name","","12","","7","","29 Jan 2015","","","IEEE","IEEE Conferences"
"Modeling and querying data in NoSQL databases","K. Kaur; R. Rani","Computer Sci. and Engg. Deptt., Thapar University, Patiala, Punjab, India 147004; Computer Sci. and Engg. Deptt., Thapar University, Patiala, Punjab, India 147004","2013 IEEE International Conference on Big Data","23 Dec 2013","2013","","","1","7","Relational databases are providing storage for several decades now. However for today's interactive web and mobile applications the importance of flexibility and scalability in data model can not be over-stated. The term NoSQL broadly covers all non-relational databases that provide schema-less and scalable model. NoSQL databases which are also termed as Internetage databases are currently being used by Google, Amazon, Facebook and many other major organizations operating in the era of Web 2.0. Different classes of NoSQL databases namely key-value pair, document, column-oriented and graph databases enable programmers to model the data closer to the format as used in their application. In this paper, data modeling and query syntax of relational and some classes of NoSQL databases have been explained with the help of an case study of a news website like Slashdot.","","978-1-4799-1293-3","10.1109/BigData.2013.6691765","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6691765","","Data models;Relational databases;Database languages;Scalability;Ciphers;Java","data handling;query processing;relational databases","data modeling;data querying;NoSQL databases;relational databases;interactive Web;mobile applications;data model flexibility;data model scalability;Internet-age databases;key-value pair database;document database;column-oriented database;graph database;query syntax;Slashdot;news Web site","","51","1","37","","23 Dec 2013","","","IEEE","IEEE Conferences"
"An OAIS-Based Hospital Information System on the Cloud: Analysis of a NoSQL Column-Oriented Approach","A. Celesti; M. Fazio; A. Romano; A. Bramanti; P. Bramanti; M. Villari","Scientific Research Organisational Unit, University of Messina, Messina, Italy; Department of Engineering, University of Messina, Messina, Italy; Department of Engineering, University of Messina, Italy; ISASI-CNR, Messina, Italy; IRCCS Centro Neurolesi “Bonino Pulejo,” Messina, Italy; Department of Engineering, University of Messina, Italy","IEEE Journal of Biomedical and Health Informatics","3 May 2018","2018","22","3","912","918","The Open Archive Information System (OAIS) is a reference model for organizing people and resources in a system, and it is already adopted in care centers and medical systems to efficiently manage clinical data, medical personnel, and patients. Archival storage systems are typically implemented using traditional relational database systems, but the relation-oriented technology strongly limits the efficiency in the management of huge amount of patients' clinical data, especially in emerging cloud-based, that are distributed. In this paper, we present an OAIS healthcare architecture useful to manage a huge amount of HL7 clinical documents in a scalable way. Specifically, it is based on a NoSQL column-oriented Data Base Management System deployed in the cloud, thus to benefit from a big tables and wide rows available over a virtual distributed infrastructure. We developed a prototype of the proposed architecture at the IRCCS, and we evaluated its efficiency in a real case of study.","2168-2208","","10.1109/JBHI.2017.2681126","European Union's Seventh Framework Programme Project frontierCities(grant numbers:632853); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7875499","Big data;Cassandra;clinical record;cloud computing;hospital information system;HL7;OAIS","Cloud computing;Computer architecture;Big Data;Hospitals;Security","cloud computing;health care;medical information systems;NoSQL databases;records management;relational databases","medical personnel;archival storage systems;traditional relational database systems;patients;OAIS healthcare architecture;HL7 clinical documents;Data Base Management System;hospital Information System;NoSQL column-oriented approach;Open Archive Information System;reference model;care centers;medical systems;clinical data","Cloud Computing;Electronic Health Records;Hospital Information Systems","5","","28","","10 Mar 2017","","","IEEE","IEEE Journals"
"Big database stores a review on various big data datastores","K. George; T. Mathew","Department of Computer Science and Engineering, Mar Baselios College of Engineering and Technology, Trivandrum, India; Department of Computer Science and Engineering, Mar Baselios College of Engineering and Technology, Trivandrum, India","2015 International Conference on Green Computing and Internet of Things (ICGCIoT)","14 Jan 2016","2015","","","567","573","In this age where there is a massive explosion in the data in our surroundings, the traditional way of actually storing and processing the data is no longer feasible. Moreover, the unstructured data that is present cannot be processed by the conventional ways. With the emergence of this data explosion also known as Big Data, a lot of importance has given to actually process and more importantly analyze the data to get the best results being in terms of decision making or predicting the future evens based on the past data at hand. The traditional SQLs have become impractical to process the latest data inflow as it lacks the structure, elasticity requirements and the high scalability. NoSQL or what can be known as Not Only SQL actually help find by a way out of the traditional approach and help process the unstructured data. For Big Data to function at its best, it needs the help of specialized databases that help in storing and processing data when needed. There are 4 main categories of the Datastores used in Big Data namely Key-Value Pair Datastore, Column Oriented Datastore, Document Oriented Datastore and Graph Datastores.","","978-1-4673-7910-6","10.1109/ICGCIoT.2015.7380529","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7380529","","Big data;Databases;Peer-to-peer computing;Scalability;Explosions;Internet;Servers","Big Data;SQL","Big Data datastores;data processing;data storage;unstructured data;data inflow;NoSQL;not-only SQL;key-value pair datastore;column oriented datastore;document oriented datastore;graph datastores","","3","","46","","14 Jan 2016","","","IEEE","IEEE Conferences"
"An Evolutionary Algorithm for Column Family Schema Optimization in HBase","F. Yang; D. Milosevic; J. Cao","Dept. of CSE, Shanghai Jiaotong Univ., Shanghai, China; ZANOX AG, Berlin, Germany; Dept. of CSE, Shanghai Jiaotong Univ., Shanghai, China","2015 IEEE First International Conference on Big Data Computing Service and Applications","13 Aug 2015","2015","","","439","445","Apache HBase is a column-oriented NoSQL key-value store built on top of the Hadoop distributed file-system. Logically, columns in HBase are grouped into column families. Physically, all columns in one column family are stored in the same set of files. Therefore the division of column families is closely related to the response time for a specific row query. In this paper, one new Evolutionary Algorithm is designed and applied to find the optimum column family schema for the given user queries. The reading performance of the optimized column family schema is evaluated on a real dataset provided by ZANOX AG, which contains 2.6 million rows of aggregated tracking data and 1.3 million user queries. It is shown that by using the found optimized column family schema, the reading performance of HBase is improved with a statistical significance. User queries from a testing set show that the average response time is reduced by up to 72% compared to un-optimized column family schemas.","","978-1-4799-8128-1","10.1109/BigDataService.2015.20","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7184913","HBase;NoSQL;Column Family;Column Layout;Schema Optimization;Evolutionary Algorithm","Optimization;Layout;Conferences;Big data;Evolutionary computation;Genetic algorithms;Algorithm design and analysis","data handling;evolutionary computation;parallel processing;query processing;SQL;statistical analysis","evolutionary algorithm;column family schema optimization;Apache HBase;column-oriented NoSQL key-value store;Hadoop distributed file-system;user queries;ZANOX AG;user queries;statistical significance","","8","","30","","13 Aug 2015","","","IEEE","IEEE Conferences"
"Developing Multiple Nested Schema to Reduce Data Redundancy in CONoSQLDB Schema","Sutedi; T. B. Adji; N. A. Setiawan","Department of Information System, Institut Informatika dan Bisnis Darmajaya, Lampung, Indonesia; Department of Electrical Engineering and Information Technology, Universitas Gadjah Mada, Yogyakarta, Indonesia; Department of Electrical Engineering and Information Technology, Universitas Gadjah Mada, Yogyakarta, Indonesia","2018 International Conference on Applied Information Technology and Innovation (ICAITI)","11 Apr 2019","2018","","","12","18","The Corporate's interest of cloud computing based system continues accelerating due to its efficiency, promising performance and better scalability. Most of these systems use the Not Only SQL (NoSQL) database. The database has different characteristics from the relational database. Data migration from a relational database to a column-oriented NoSQL database (CONoSQLDB) can use the concept of Multiple Nested Schema. The concept has proved to be effectual to boost query performance but at the cost of high data redundancy. This study proposes a new conversion method called Enhanced Multiple Nested Schema, developed of Multiple Nested Schema by adding rules to identify and eliminate inter-table transitive dependency-one of the major causes of data redundancy. We aim to reduce data redundancy in CONoSQLDB Schema. The objective is to generate CONoSQLDB schema much better. Previous research did not pay attention to transitive dependency problems when doing schema conversion. The proposed conversion mechanism produces an efficient CONoSQLDB database schema. However, the schema guarantees complete data and allows queries quickly. This means that the additional rules proposed in this study can improve the CONoSQLDB schema generated using the previous method.","","978-1-5386-6726-2","10.1109/ICAITI.2018.8686736","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8686736","conversion;migration;SQL to NoSQL;transitive dependency;column-oriented NoSQL","","cloud computing;data reduction;NoSQL databases;query processing;relational databases","cloud computing based system;SQL database;relational database;data migration;column-oriented NoSQL database;data redundancy reduction;multiple nested schema;CONoSQLDB database schema;query performance;cloud computing","","","","14","","11 Apr 2019","","","IEEE","IEEE Conferences"
"An in-kernel NOSQL cache for range queries using FPGA NIC","K. Tamura; H. Matsutani","Dept. of ICS, Keio University, 3-14-1 Hiyoshi, Kohoku-ku, Yokohama, Japan; Dept. of ICS, Keio University, 3-14-1 Hiyoshi, Kohoku-ku, Yokohama, Japan","2016 International Conference on FPGA Reconfiguration for General-Purpose Computing (FPGA4GPC)","25 Jul 2016","2016","","","13","18","To make use of big data, various NOSQL data stores have been deployed, such as key-value stores and column-oriented stores. NOSQL data stores typically achieve a high degree of scalability, while specialized for some specific purposes; thus, Polyglot persistence that employs multiple NOSQL data stores complementally is a practical choice toward a high diversity of application demands. We assume various NOSQL data stores running on database servers are accessed by clients via a network. This paper aims to improve performance of the Polyglot persistence by introducing an FPGA-based 10GbE network interface (NIC) and In-Kernel NOSQL Cache (IKNC) implemented in the NIC device driver. IKNC stores query results as a key-value form in a host memory, and the requested data can be returned to clients immediately if the query result has been cached. In the IKNC keyvalue pair, the key is a hashed value of a given search query and the value is a query result of the search query. Existing works have focused only on key-value stores, while that for column-oriented stores that support range queries (e.g., scan operation) has not been addressed. In this paper, we also propose two cache strategies of IKNC for column-oriented stores. In our experiments, Apache HBase is running on an application layer, while our IKNC with the proposed cache strategies is implemented on an FPGA-based NIC and its device driver. A significant performance improvement is achieved by the proposed IKNC and pros and cons of the proposed two cache strategies are demonstrated.","","978-1-5090-1359-3","10.1109/FPGA4GPC.2016.7518528","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7518528","","Servers;Kernel;Field programmable gate arrays;Data structures;Network interfaces;Protocols","Big Data;cache storage;field programmable gate arrays;query processing;SQL","in-kernel NOSQL cache;range queries;FPGA NIC;big data;NOSQL data stores;Polyglot persistence;network interface;column-oriented stores","","1","","19","","25 Jul 2016","","","IEEE","IEEE Conferences"
"Query processing over data warehouse using relational databases and NoSQL","A. C. Carniel; A. de Aguiar Sá; V. H. P. Brisighello; M. X. Ribeiro; R. Bueno; R. R. Ciferri; C. D. de Aguiar Ciferri","Departamento de Computação, Universidade Federal de São Carlos, SP, Brasil; Departamento de Computação, Universidade Federal de São Carlos, SP, Brasil; Departamento de Computação, Universidade Federal de São Carlos, SP, Brasil; Departamento de Computação, Universidade Federal de São Carlos, SP, Brasil; Departamento de Computação, Universidade Federal de São Carlos, SP, Brasil; Departamento de Computação, Universidade Federal de São Carlos, SP, Brasil; Departamento de Ciências de Computação, Universidade de São Paulo São Carlos, Brasil","2012 XXXVIII Conferencia Latinoamericana En Informatica (CLEI)","4 Feb 2013","2012","","","1","9","Data warehouse (DW) is an important component of Business Intelligence used to support strategic decision making. DW is a subject-oriented, nonvolatile, historical and massive database, which the processing of analytical queries, results in high response times. There known techniques for improving the performance processing of queries on DW. Among them is the use of data fragmentation, materialized views and indices. In addition, the NoSQL is an emerging technology whose main characteristics are improved query processing and data storage, and an alternative to relational databases. In this paper we investigate and compare the implementation of DW using relational databases and NoSQL, considering the Star Schema Benchmark. The results showed that the column-oriented model of the software FastBit showed a better performance, with gains of 25.4% to 99.4% if compared to other models NoSQL and the relational model, in the processing of queries on DW.","","978-1-4673-0793-2","10.1109/CLEI.2012.6427228","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6427228","data warehouse;query processing;relational databases;NoSQL;bitmap join indices","Software;Amplitude modulation;Data warehouses;Computational modeling;Relational databases;Asia;Query processing","competitive intelligence;data handling;data warehouses;decision making;query processing;relational databases;SQL","query processing;data warehouse;relational databases;NoSQL;DW;business intelligence;strategic decision making support;analytical queries;data fragmentation;data storage;star schema benchmark","","4","","19","","4 Feb 2013","","","IEEE","IEEE Conferences"
"Denormalizing data into schema-free databases","T. Vajk; P. Fehér; K. Fekete; H. Charaf","Department of Automation and Applied Informatics, Budapest University of Technology and Economics, Hungary; Department of Automation and Applied Informatics, Budapest University of Technology and Economics, Hungary; Department of Automation and Applied Informatics, Budapest University of Technology and Economics, Hungary; Department of Automation and Applied Informatics, Budapest University of Technology and Economics, Hungary","2013 IEEE 4th International Conference on Cognitive Infocommunications (CogInfoCom)","23 Jan 2014","2013","","","747","752","With the proliferation of cloud service providers, the use of non-relational (NoSQL) data stores is increasing. In contrast to standard relational database schema design, which has its strong mathematical background in relational algebra and set theory, development with NoSQL data stores is largely based on empirical best practices. Furthermore, the huge variety of NoSQL variants may require different design considerations. In this paper, an algorithm is introduced to automatically derive cost and performance optimal schema in column-oriented data stores based on predefined queries and an initial relational database schema. Algorithms are given to perform database denormalization, as well as to transform the original queries to meet the newly created schemas.","","978-1-4799-1546-0","10.1109/CogInfoCom.2013.6719198","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6719198","","Optimization;Relational databases;Indexes;Navigation;Cloud computing;Load modeling","cloud computing;relational algebra;relational databases;set theory","schema-free databases;cloud service providers;nonrelational data stores;NoSQL data stores;standard relational database schema design;relational algebra;set theory;column-oriented data stores;predefined queries;initial relational database schema;database denormalization","","15","","29","","23 Jan 2014","","","IEEE","IEEE Conferences"
"SHC: Distributed Query Processing for Non-Relational Data Store","W. Yang; M. Tang; Y. Yu; Y. Liang; B. Saha",NA; NA; NA; NA; NA,"2018 IEEE 34th International Conference on Data Engineering (ICDE)","25 Oct 2018","2018","","","1465","1476","We introduce a simple data model to process non-relational data for relational operations, and SHC (Apache Spark - Apache HBase Connector), an implementation of this model in the cluster computing framework, Spark. SHC leverages optimization techniques of relational data processing over the distributed and column-oriented key-value store (i.e., HBase). Compared to existing systems, SHC makes two major contributions. At first, SHC offers a much tighter integration between optimizations of relational data processing and non-relational data store, through a plug-in implementation that integrates with Spark SQL, a distributed in-memory computing engine for relational data. The design makes the system maintenance relatively easy, and enables users to perform complex data analytics on top of key-value store. Second, SHC leverages the Spark SQL Catalyst engine for high performance query optimizations and processing, e.g., data partitions pruning, columns pruning, predicates pushdown and data locality. SHC has been deployed and used in multiple production environments with hundreds of nodes, and provides OLAP query processing on petabytes of data efficiently.","2375-026X","978-1-5386-5520-7","10.1109/ICDE.2018.00165","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8509386","Query processing and optimization;distributed computing;in memory computing","Sparks;Query processing;Engines;Optimization;Distributed databases;Structured Query Language;Data models","cluster computing;data analysis;data mining;data models;NoSQL databases;optimisation;query processing;relational databases;SQL","data partition pruning;column pruning;distributed in-memory computing engine;cluster computing framework;plug-in implementation;data locality;high performance query optimizations;Spark SQL Catalyst engine;complex data analytics;distributed column-oriented key-value store;relational data processing;Apache Spark - Apache HBase Connector;relational operations;simple data model;nonrelational data store;distributed query processing;OLAP query processing","","1","","40","","25 Oct 2018","","","IEEE","IEEE Conferences"
"ACaZoo: A Distributed Key-Value Store Based on Replicated LSM-Trees","P. Garefalakis; P. Papadopoulos; K. Magoutis","Inst. of Comput. Sci., Found. for Res. & Technol.-Hellas, Heraklion, Greece; Inst. of Comput. Sci., Found. for Res. & Technol.-Hellas, Heraklion, Greece; Inst. of Comput. Sci., Found. for Res. & Technol.-Hellas, Heraklion, Greece","2014 IEEE 33rd International Symposium on Reliable Distributed Systems","15 Dec 2014","2014","","","211","220","In this paper we describe the design and implementation of ACaZoo, a key-value store that combines strong consistency with high performance and high availability. ACaZoo supports the popular column-oriented data model of Apache Cassandra and HBase. It implements strongly-consistent data replication using primary-backup atomic broadcast of a write-ahead log, which records data mutations to a Log-structured Merge Tree (LSM-Tree). ACaZoo scales by horizontally partitioning the key space via consistent primary-key hashing on available replica groups (RGs). LSM-Tree compactions can hamper performance, especially when they take place at RG primaries. ACaZoo addresses this problem by changing RG leadership prior to heavy compactions, a method that can improve throughput by up to 40% in write-intensive workloads. We evaluate ACaZoo using the Yahoo Cloud Serving Benchmark (YCSB) and compare it to Oracle's NoSQL Database and to Cassandra providing serial consistency via an extension of the Paxos algorithm.","1060-9857","978-1-4799-5584-8","10.1109/SRDS.2014.43","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6983396","distributed systems;key-value stores;nosql databases","Compaction;Nominations and elections;Servers;Proposals;Protocols;Data models;Databases","data handling;data models;tree data structures","ACaZoo;distributed key-value store;replicated LSM-trees;log-structured merge tree;Apache Cassandra column-oriented data model;HBase column-oriented data model;strongly-consistent data replication;primary-backup atomic broadcast;write-ahead log;data mutations;primary-key hashing;replica groups;RGs;Yahoo cloud serving benchmark;YCSB;Oracle NoSQL database;Paxos algorithm","","3","2","30","","15 Dec 2014","","","IEEE","IEEE Conferences"
"Document-oriented versus Column-oriented Data Storage for Social Graph Data Warehouse","Z. Challal; W. Bala; H. Mokeddem; K. Boukhalfa; O. Boussaid; E. Benkhelifa","Université des sciences et de la technologie Houari Boumediene,dept. of computer science,Algiers,Algeria; Université des sciences et de la technologie Houari Boumediene,dept. of computer science,Algiers,Algeria; Université des sciences et de la technologie Houari Boumediene,dept. of computer science,Algiers,Algeria; Université des sciences et de la technologie Houari Boumediene,dept. of computer science,Algiers,Algeria; Laboratoire ERIC, Institut de Communication, Université de Lyon,Lyon 2,France; Cloud Computing and Applications Research Lab, School of Computing and Digital Technologies, Staffordshire University,Stoke-on-Trent,UK,ST4 2DE","2019 Sixth International Conference on Social Networks Analysis, Management and Security (SNAMS)","16 Dec 2019","2019","","","242","247","Graph data like social networks data are emerging and form a valuable source of information. Analyzing these graphs with OLAP-style operations provide a multi-dimensional and multi-level view of graph data which allows powerful analysis from different perspectives and multiple granularities. For this purpose, conceptual graph OLAP model was proposed in the literature. The key difference from traditional OLAP is that the measure in a graph cube is an aggregated graph. The question we are answering in this paper is how to store data of such graph cubes. We propose a column and a document store models. We compare the performance of the Roll up operation over these two databases. The Document oriented storage seems to be more suitable for Graph Cube.","","978-1-7281-2946-4","10.1109/SNAMS.2019.8931718","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8931718","Graph OLAP;NoSQL models","Databases;Data models;Social networking (online);Analytical models;Aggregates;Computational modeling;Memory","data analysis;data mining;data warehouses;graph theory;query processing;social networking (online)","social networks data;OLAP-style operations;conceptual graph OLAP model;graph cube;document store models;social graph data warehouse;document-oriented data storage;column-oriented data storage","","","","13","","16 Dec 2019","","","IEEE","IEEE Conferences"
"Evaluation of storage and query performance of sensor based Internet of Things data with MongoDB","N. Yılmaz; O. Alatlı; B. Çiloğlugil; R. C. Erdur","Department of Computer Engineering, Ege University, Izmir, Turkey; Department of Computer Engineering, Ege University, Izmir, Turkey; Department of Computer Engineering, Ege University, Izmir, Turkey; Department of Computer Engineering, Ege University, Izmir, Turkey","2018 International Conference on Artificial Intelligence and Data Processing (IDAP)","24 Jan 2019","2018","","","1","6","Internet of Things (IoT) can be defined as the communication network that connects physical devices such as sensors, actuators, electronic home appliances and smart devices with each other and other systems. As part of IoT, numerous physical devices work concurrently and produce data continuously with big volumes. In this regard, NoSQL technology is utilized, because relational databases are insufficient to store and query the IoT data. NoSQL is the database technology that allows rapid organization of different non-relational data types. NoSQL databases are divided into four categories, which are key-value based, column-oriented, document-oriented and graph databases. Since graph databases do not provide effective solutions for IoT data, several studies in the literature focus on the use of database technologies in the other three categories for the purpose of storing and querying IoT data more effectively. In this paper, it is aimed to evaluate the storage and query performance of MongoDB on IoT data. It has been decided to use MongoDB, which is a document-oriented NoSQL database technology, because of its popular usage and high performance. Yahoo Cloud Serving Benchmark (YCSB), which is an open source tool developed by Yahoo that allows database operations at different volumes, is used for performance measurements. YCSB has been made compatible with the IoT dataset that is used for performance measurements, by re-organizing its DB Interface Layer for this study. The paper is concluded with discussion of the performance measurement results.","","978-1-5386-6878-8","10.1109/IDAP.2018.8620837","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8620837","internet of things;NoSQL databases;MongoDB;performance analysis;YCSB","Measurement;Home appliances;NoSQL databases;Relational databases;Organizations;Tools;Sensor systems","cloud computing;data analysis;data structures;graph theory;Internet of Things;public domain software;query processing;relational databases;SQL","smart devices;relational databases;IoT data;nonrelational data types;graph databases;document-oriented NoSQL database technology;IoT dataset;electronic home appliances;sensor based Internet of Things data;communication network;actuators;key-value based databases;column-oriented databases;Yahoo cloud serving benchmark;YCSB;open source tool;MongoDB interface layer","","","","0","","24 Jan 2019","","","IEEE","IEEE Conferences"
"Performance analysis and testing of HBase based on its architecture","L. Cai; S. Huang; L. Chen; Y. Zheng","Shanghai Key Laboratory of Computer Software Evaluating & Testing Shanghai, China; School of Information Science & Engineering, East China, University of Science and Technology Shanghai, China; School of Information Science & Engineering, East China, University of Science and Technology Shanghai, China; School of Information Science & Engineering, East China, University of Science and Technology Shanghai, China","2013 IEEE/ACIS 12th International Conference on Computer and Information Science (ICIS)","26 Sep 2013","2013","","","353","358","The development and wide application of the internet technology produces a large amount of data, in order to storage and manage these massive data, NoSQL database technology comes into beings and develops rapidly, many manufacturers have introduced many different NoSQL storage solutions. In this context, the paper carries out the work about the testing method of the performance of NoSQL database. Firstly, the paper analyses the new features of the NoSQL database systems. Then, the paper proposes a general testing model for performance testing of the complicated system, which means that the architecture and its business should be considered when the testing work is carried out. Lastly, apply the model to perform the HBase's performance testing in the architecture level, mainly including some elements of the performance, such as the column-oriented data model, the spilt mechanism of the data table, the factor of the data replication. As to the every performance element, design the corresponding testing scenario and execute the testing procedure.","","978-1-4799-0174-6","10.1109/ICIS.2013.6607866","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6607866","Testing model;HBase;data partition","Testing;Business;Writing;Computer architecture;Delays;Databases;Scalability","distributed databases;Internet;program testing;SQL","data replication factor;data table spilt mechanism;column-oriented data model;general testing model;NoSQL storage solutions;NoSQL database technology;Internet technology;HBase performance testing;HBase performance analysis","","7","","11","","26 Sep 2013","","","IEEE","IEEE Conferences"
"Maintaining NoSQL Database Quality During Conceptual Model Evolution","P. Suárez-Otero; M. J. Mior; M. José Suárez-Cabal; J. Tuya","University of Oviedo,Computer Science Department,Gijón,Spain; Rochester Institute of Technology,Department of Computer Science,Rochester,New York,USA; University of Oviedo,Computer Science Department,Gijón,Spain; University of Oviedo,Computer Science Department,Gijón,Spain","2020 IEEE International Conference on Big Data (Big Data)","19 Mar 2021","2020","","","2043","2048","Database schemas evolve over time to satisfy changing application requirements. If this evolution is not performed correctly, some quality attributes are at risk such as data integrity, functional correctness, or maintainability. To help developer teams in the design of database schemas, several design methodologies for NoSQL databases have proposed to use conceptual models during this process. The use of an explicit conceptual model can also help developers in the tasks of schema evolution. In this work-in-progress paper, we propose a framework that, given a change in the conceptual model, identifies what must be modified in a NoSQL database schema and the underlying data. We researched several open source projects that use Apache Cassandra to study the benefits of using a conceptual model during the schema evolution process as well as to understand how these models evolve. In this first work, we have focused on studying seven types of conceptual model changes identified in these projects. For each change we describe the transformation required in the database schema to maintain the consistency between the schema and the model as well as the migration of data required to the new schema version.","","978-1-7281-6251-5","10.1109/BigData50022.2020.9378228","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9378228","quality;database evolution;NoSQL;column-oriented databases;conceptual model","Databases;NoSQL databases;Design methodology;Data integrity;Big Data;Data models;Task analysis","data integrity;data models;SQL","NoSQL database quality;conceptual model evolution;application requirements;quality attributes;functional correctness;design methodologies;schema evolution process;data migration;Apache Cassandra;open source projects;data integrity;maintainability","","","","24","","19 Mar 2021","","","IEEE","IEEE Conferences"
"UMLtoNoSQL: Automatic Transformation of Conceptual Schema to NoSQL Databases","F. Abdelhedi; A. A. Brahim; F. Atigui; G. Zurfluh","CBI2, TRIMANE, Paris, France; IRIT, Toulouse Capitole Univ., Toulouse, France; CEDRIC, CNAM, Paris, France; IRIT, Toulouse Capitole Univ., Toulouse, France","2017 IEEE/ACS 14th International Conference on Computer Systems and Applications (AICCSA)","12 Mar 2018","2017","","","272","279","Volume, Variety and Velocity are the three dimensions that have definitely changed the tools we need to store and process Big Data effectively, giving rise to NoSQL systems for faster data access, better scalability and higher flexibility. While NoSQL systems have proven their efficiency to handle Big Data, it is still an unsolved problem how the automatic storage of Big Data in NoSQL systems could be done. One solution for addressing this problem is to model Big Data, and then define mapping rules towards the physical level. This paper proposes an automatic MDA-based approach that translates conceptual models expressed using the Unified Modeling Language (UML) into NoSQL physical models. Our approach rely on an intermediate logical model compatible with column, document and graph oriented systems which allows to choose the system type that suits the best with business rules and technical constraints.","2161-5330","978-1-5386-3581-0","10.1109/AICCSA.2017.76","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8308297","UML conceptual model;NoSQL;Big Data storage;MDA;Models Transformation","Unified modeling language;Data models;Big Data;Databases;Computational modeling;Tools;Business","Big Data;NoSQL databases;Unified Modeling Language","column oriented systems;document oriented systems;intermediate logical model;UML;Unified Modeling Language;data access;conceptual schema transformation;automatic MDA-based approach;NoSQL physical models;automatic storage;NoSQL systems;Big Data;NoSQL databases;automatic transformation;graph oriented systems","","1","","13","","12 Mar 2018","","","IEEE","IEEE Conferences"
"Improvement of Data Searching in MongoDB with the Use of Oracle Database","R. Čerešňák; K. Matiaško; A. Dudáš","University of Zilina,Department of Informatics,Zilina,Slovakia; University of Zilina,Department of Informatics,Zilina,Slovakia; Matej Bel University,Department of Computer Science,Banská Bystrica,Slovakia","2021 18th International Multi-Conference on Systems, Signals & Devices (SSD)","20 May 2021","2021","","","1388","1393","In the 1950s, the demand for useful data storage gained importance and with it relational databases started to play an essential role in many sectors. Nowadays, relational databases cannot effectively fulfill the demands for interactive web and mobile applications, which demand flexibility and scalability for a data model. With the term NoSQL, we cover all the non-relational databases which provide no scheme and scaling model. NoSQL Databases, also called internet databases, are nowadays used by such significant organizations as Google, Amazon, Facebook and many others. Different classes of databases NoSQL, specifically couples of key-value pairs, documentary, column-oriented databases and graph databases, allow programmers to model the data near the format used in their application. One of the disadvantages, resulting from a free structure, is the security of effective searching in the non-relational databases. Several studies dealt with the effective way of searching in the non-relational databases. These studies examined the model data in the non-relational database MongoDB with the help of a relational model. In this paper, we introduce a method which searches for the data stored in the non-relational database MongoDB using the model with the permanent structure in relational database Oracle. Even though efficiency of our solution could be debated while using smaller datasets, with growing size of data the efficiency of presented solution increases.","2474-0446","978-1-6654-1493-7","10.1109/SSD52085.2021.9429468","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9429468","MongoDB;Oracle;data searching;search optimization;permanent structure","Social networking (online);Scalability;NoSQL databases;Relational databases;Organizations;Parallel processing;Data models","data models;Internet;relational databases;security of data;storage management","graph databases;nonrelational database MongoDB;relational model;relational database Oracle;data searching;Oracle database;data storage;data model;Internet databases;column-oriented databases;NoSQL databases","","","","10","","20 May 2021","","","IEEE","IEEE Conferences"
"Driving Big Data with Hadoop Tools and Technologies","B. Balusamy; N. Abirami R; S. Kadry; A. H. Gandomi",NA; NA; NA; NA,"Big Data: Concepts, Technology, and Architecture","","2021","","","111","160","The core components of Hadoop, namely Hadoop Distributed File System (HDFS), MapReduce, and Yet Another Resource Negotiator (YARN) are explained. This chapter also examines the features of HDFS such as its scalability, reliability, and its robust nature. Apache Hadoop is an open‐source framework written in Java that supports processing of large data sets in streaming access pattern across clusters in a distributed computing environment. HBase is a column‐oriented NoSQL database that is a horizontally scalable open‐source distributed database built on top of the HDFS. When the structured data is huge and RDBMS is unable to support the huge data, the data is transferred to HDFS through a tool called SQOOP (SQL to Hadoop). The basic difference flume and SQOOP is that SQOOP is used in ingesting structured data into Hive, HDFS, and HBase, whereas Flume is used to ingest large amounts of streaming data into Hive, HDFS, and HBase.","","9781119701866","10.1002/9781119701859.ch5","","https://ieeexplore.ieee.org/xpl/ebooks/bookPdfWithBanner.jsp?fileName=9415300.pdf&bkn=9415279&pdfType=chapter","","Distributed databases;Task analysis;File systems;Computer architecture;Yarn;Tools;Monitoring","","","","","","","","23 Apr 2021","","","Wiley","Wiley Telecom eBook Chapters"
"Ontology based data integration of NoSQL datastores","V. K. Kiran; R. Vijayakumar","Computer Science and Engineering, NSS College of Engineering, Palakkad, India; School of Computer Sciences, Mahatma Gandhi University, Kottayam, India","2014 9th International Conference on Industrial and Information Systems (ICIIS)","12 Feb 2015","2014","","","1","6","NoSQL databases are suitable for network traffic loads experienced by today's websites. The important attributes that make them a favorable choice are inherent distributed nature, horizontal scalability and flexibility in data models. Hence, more data is now getting handled through NoSQL databases and sensible information extraction from these data stores is becoming a requirement. Information extraction may require sourcing data from multiple data sources, establishing relationship among them and querying across these data sources together. Ontology based semantic integration systems for Relational Database Management Systems (RDBMS) already exist that satisfies the above requirement. Many commercial systems are operational based on the above technique and tools and solutions for the above approach are very much mature. Hence, mapping the processing done in each stage of RDBMS based semantic integration systems to that of NoSQL systems can facilitate usage of existing tools and frameworks. The purpose of this work is to develop ontology based semantic integration system for a column-oriented NoSQL data store like HBase which is similar in architectural design to RDBMS.","2164-7011","978-1-4799-6500-7","10.1109/ICIINFS.2014.7036545","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7036545","NoSQL;Ontology;Integration;HBase;RDF;SPARQL;OWL","Ontologies;Resource description framework;OWL;Semantics;Relational databases;Random access memory","data integration;ontologies (artificial intelligence);query processing;relational databases;SQL;Web sites","NoSQL data stores;NoSQL databases;network traffic loads;Websites;horizontal scalability;data models;information extraction;ontology based semantic integration systems;relational database management systems;RDBMS based semantic integration systems;NoSQL systems;ontology based semantic integration system;column-oriented NoSQL data store;HBase","","12","","11","","12 Feb 2015","","","IEEE","IEEE Conferences"
"What database do you choose for heterogeneous security log events analysis?","S. Lagraa; R. State","University of Luxembourg,Interdisciplinary Centre for Security, Reliability and Trust (SnT); University of Luxembourg,Interdisciplinary Centre for Security, Reliability and Trust (SnT)","2021 IFIP/IEEE International Symposium on Integrated Network Management (IM)","30 Jun 2021","2021","","","812","817","The heterogeneous massive logs incoming from multiple sources pose major challenges to professionals responsible for IT security and system administrator. One of the challenges is to develop a scalable heterogeneous logs database for storage and further analysis. In fact, it is difficult to decide which database is suitable for the needs, the best of a use case, execution time and storage performances. In this paper, we explore, study, and compare the performance of SQL and NoSQL databases on large heterogeneous event logs. We implement the relational database using MySQL, the column-oriented database using Impala on the top of Hadoop, and the graph database using Neo4j. We experiment the databases on a large heterogeneous logs and provide advice, the pros and cons of each SQL and NoSQL database. Our findings that Impala outperforms MySQL and Neo4j databases in terms of loading logs, execution time of simple queries, and storage of logs. However, Neo4j outperforms Impala and MySQL in the execution time of complex queries.","1573-0077","978-3-903176-32-4","","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9463953","","Structured Query Language;Databases;Firewalls (computing);NoSQL databases;Loading;Relational databases;Cluster computing","","","","","","10","","30 Jun 2021","","","IEEE","IEEE Conferences"
"Access-Aware In-memory Data Cache Middleware for Relational Databases","K. Ma; B. Yang","Shandong Provincial Key Lab. of Network Based Intell. Comput., Univ. of Jinan, Jinan, China; Shandong Provincial Key Lab. of Network Based Intell. Comput., Univ. of Jinan, Jinan, China","2015 IEEE 17th International Conference on High Performance Computing and Communications, 2015 IEEE 7th International Symposium on Cyberspace Safety and Security, and 2015 IEEE 12th International Conference on Embedded Software and Systems","30 Nov 2015","2015","","","1506","1511","Data systems are typically categorized into source-of-truth systems that serve as primary stores for the user-generated writes, reads and other complex queries. In recent years, scientists regularly encounter limitations due to large data sets in many areas, especially for the query of big data. In this paper, we construct Access-aware In-memory Data Cache Middleware (AIDCM) for relational databases, which is an integral part of RDBMS and in-memory cache. On one hand, AIDCM provides low latency while supporting log-based trigger in the presence of updates to maintain data consistency. On the other hand, AIDCM translate the frequently accessed data to column-oriented in-memory cache by the column access frequency to ensure heavy hitter queries. We also present the experimental results to describe our middleware supporting a wide range of applications with big data.","","978-1-4799-8937-9","10.1109/HPCC-CSS-ICESS.2015.186","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7336381","big data;memory;NoSQL;RDBMS;data cache;access frequency","Middleware;Relational databases;Big data;Engines;Synchronization;Business","Big Data;cache storage;data integrity;middleware;query processing;relational databases","access-aware in-memory data cache middleware;relational database;data systems;source-of-truth systems;user-generated writes;reads;complex queries;AIDCM;RDBMS;log-based trigger;data consistency;column-oriented in-memory cache;column access frequency;heavy hitter queries;Big Data","","6","","16","","30 Nov 2015","","","IEEE","IEEE Conferences"
"NoSQL Database","B. Balusamy; N. Abirami R; S. Kadry; A. H. Gandomi",NA; NA; NA; NA,"Big Data: Concepts, Technology, and Architecture","","2021","","","53","81","This chapter focuses on non‐structured query language (NoSQL) and its advantage over relational database management systems (RDBMS). It explains consistency, availability, and partition tolerance (Cap) theorem, atomicity, consistency, isolation, and durability (ACID), and basically available, soft state, and eventually consistent (BASE) properties exhibited by various database systems. The chapter presents a comparison explaining the drawbacks of SQL database and advantages of NoSQL database, which led to the switch over from SQL to NoSQL. It also explains various NoSQL technologies such as key‐value pairs, document‐oriented database, graph database, or column‐oriented database. The chapter shows the NoSQL (create, update, and delete) CRUD operations. A database cannot exhibit more than two of the three properties of the CAP theorem. RDBMS exhibit ACID properties. NoSQL databases exhibit the BASE properties. Schemaless databases are those that do not require any rigid schema to store the data.","","9781119701866","10.1002/9781119701859.ch3","","https://ieeexplore.ieee.org/xpl/ebooks/bookPdfWithBanner.jsp?fileName=9415339.pdf&bkn=9415279&pdfType=chapter","","Databases;NoSQL databases;Big Data;Terminology;Relational databases;Computer crashes;Tuning","","","","","","","","23 Apr 2021","","","Wiley","Wiley Telecom eBook Chapters"
"Haery: A Hadoop Based Query System on Accumulative and High-Dimensional Data Model for Big Data","J. Song; H. He; R. Thomas; Y. Bao; G. Yu","Software College, Northeastern University, Shenyang, Liaoning, China; Software College, Northeastern University, Shenyang, Liaoning, China; School of Information Technology and Electrical Engineering, The University of Queensland, Brisbane, Queensland, Australia; School of Computer Science and Engineering, Northeastern University, Shenyang, Liaoning, China; School of Computer Science and Engineering, Northeastern University, Shenyang, Liaoning, China","IEEE Transactions on Knowledge and Data Engineering","4 Jun 2020","2020","32","7","1362","1377","Column-oriented stores, known for their scalability and flexibility, are a common NoSQL database implementation and are increasingly used in big data management. In column-oriented stores, a “full-scan” query strategy is inefficient and the search space can be reduced if data is well partitioned or indexed; however, there is no pre-defined schema for building and maintaining partitions and indexes at lower cost. We leverage an accumulative and high-dimensional data model, a sophisticated linearization algorithm, and an efficient query algorithm, to solve the challenge of how a pre-defined and well-partitioned data model can be applied to flexible and time-varied key-value data. We adapt a high-dimensional array as the data model to partition the key-value data without additional storage and massive calculation; improve the Z-order linearization algorithm, which map multidimensional data to one dimension while preserving locality of the data points, for flexibility; efficiently build an expansion mechanism for the data model to support time-varied data. The result is Haery, a column-oriented store, based on a distributed file system and computing framework. In experiments, Haery is compared with Hive, HBase, Cassandra, MongoDB, PostgresXL, and HyperDex in terms of query performance. With results indicating Haery on average performs 4.57x, 4.23x, 3.55x, 1.79x, 1.82x, and 120.6x faster, respectively.","1558-2191","","10.1109/TKDE.2019.2904056","National Natural Science Foundation of China(grant numbers:61672143,61433008,U1435216,61662057,61502090,61402090); Fundamental Research Funds for the Central Universities(grant numbers:N1616020 03); ","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8664133","Key-value data;column-oriented store;multi-dimensional data model;linearization;accumulation","Data models;Big Data;Partitioning algorithms;NoSQL databases;Indexing","Big Data;cloud computing;data analysis;data integrity;distributed databases;NoSQL databases;query processing;SQL","column-oriented store;Haery;query system;high-dimensional data model;common NoSQL database implementation;big data management;full-scan query strategy;pre-defined schema;accumulative data model;sophisticated linearization algorithm;query algorithm;high-dimensional array;multidimensional data;data points;time-varied key-value data;query performance","","4","","32","IEEE","10 Mar 2019","","","IEEE","IEEE Journals"
"Survey on NoSQL database","Jing Han; Haihong E; Guan Le; Jian Du","PCN&CAD Center, Beijing University of Posts and Telecommunications, 100876, China; PCN&CAD Center, Beijing University of Posts and Telecommunications, 100876, China; PCN&CAD Center, Beijing University of Posts and Telecommunications, 100876, China; Super Instruments Corporation, Beijing, 100876, China","2011 6th International Conference on Pervasive Computing and Applications","19 Dec 2011","2011","","","363","366","With the development of the Internet and cloud computing, there need databases to be able to store and process big data effectively, demand for high-performance when reading and writing, so the traditional relational database is facing many new challenges. Especially in large scale and high-concurrency applications, such as search engines and SNS, using the relational database to store and query dynamic user data has appeared to be inadequate. In this case, NoSQL database created. This paper describes the background, basic characteristics, data model of NoSQL. In addition, this paper classifies NoSQL databases according to the CAP theorem. Finally, the mainstream NoSQL databases are separately described in detail, and extract some properties to help enterprises to choose NoSQL.","","978-1-4577-0208-2","10.1109/ICPCA.2011.6106531","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6106531","NoSQL;key-value;column-oriented;document;database;Big Data","Databases;Facebook;Computational modeling;Blogs;Reliability","cloud computing;query processing;relational databases;SQL","NoSQL database;Internet;cloud computing;relational database;high-concurrency applications;search engines;SNS;query dynamic user data;data model;CAP theorem","","91","1","9","","19 Dec 2011","","","IEEE","IEEE Conferences"
"SQL, NewSQL, and NOSQL Databases: A Comparative Survey","T. N. Khasawneh; M. H. AL-Sahlee; A. A. Safia","Princess Sumaya University for Technology,Computer science,Amman,Jordan; Princess Sumaya University for Technology,Computer science,Amman,Jordan; Princess Sumaya University for Technology,Computer science,Amman,Jordan","2020 11th International Conference on Information and Communication Systems (ICICS)","27 Apr 2020","2020","","","013","021","Non-relational databases have proved to be a viable alternative to the traditional relational database management systems, especially with the ever-increasing volume of data. Also known as ""NoSQL"" database systems, a scalable management system enabling handling such volumes of data. This work aims at providing an overview of the different NoSQL management systems, classifying them into four main categories: key-value stores, column-oriented, document-oriented, and graph oriented, comparing each of the categories using multiple criteria including the CAP theorem and BASE properties.","2573-3346","978-1-7281-6227-0","10.1109/ICICS49469.2020.239513","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9078970","RDBMS;NewSQL;NoSQL;CAP Theorem;BASE properties","","NoSQL databases;pattern classification;relational databases;SQL","NewSQL;comparative survey;nonrelational databases;NoSQL database systems;scalable management system;NoSQL management systems;column-oriented key-value stores;document-oriented key-value store;graph oriented key-value store","","1","","25","","27 Apr 2020","","","IEEE","IEEE Conferences"
