"Document Title",Authors,"Author Affiliations","Publication Title",Date Added To Xplore,"Publication Year","Volume","Issue","Start Page","End Page","Abstract","ISSN",ISBNs,"DOI",Funding Information,PDF Link,"Author Keywords","IEEE Terms","INSPEC Controlled Terms","INSPEC Non-Controlled Terms","Mesh_Terms",Article Citation Count,Patent Citation Count,"Reference Count","License",Online Date,Issue Date,"Meeting Date","Publisher",Document Identifier
"NoSQL databases: Critical analysis and comparison","A. Gupta; S. Tyagi; N. Panwar; S. Sachdeva; U. Saxena","Jaypee Institute of Information Technology, India; Jaypee Institute of Information Technology, India; Jaypee Institute of Information Technology, India; Jaypee Institute of Information Technology, India; Minjar Cloud Services Private Limited, India","2017 International Conference on Computing and Communication Technologies for Smart Nation (IC3TSN)","8 Feb 2018","2017","","","293","299","The current research explores and differentiates between various forms in which NoSQL databases exist. It examines the need of NoSQL and how they have become an important alternative to relational databases. NoSQL databases can be categorized into four major classifications which are: key value stores, graph databases, wide column stores, and document stores. These categories are compared on the basis of functional features and non-functional features. The non-functional features include performance, scalability, flexibility, structure and complexity. The functional features include de-normalization, joins, atomicity, aggregation and keys. Then for further analysis, one database is selected from each of these categories that is, MongoDB (document stores), Cassandra (wide column stores), Redis (key value stores), and Neo4j (graph databases). Selected databases are compared on their data model, CAP theorem, distributive properties and other factors. By performing the comparison on non-functional features, it has been found that a document store can be used if high performance, flexibility and scalability are required and if we have represented the data in JSON format. Column store can be used for semi structured data which requires high performance and scalability. Redis is anin-memory store and performs exceptionally fast in the case of single shard operation. Graph databases can be used when it comes to highly interconnected data and continuously evolving data models. The comparison between MongoDB, Cassandra, Redis and Neo4j concluded that all of them follow horizontal scaling and are schema free. Except Neo4j, others don't have complete ACID properties. Write and delete operations are fast for databases MongoDB, Redis and Cassandra, whereas read operation is comparatively slow in Cassandra. In case of Neo4j, REST performance is similar to MongoDB, whereas embedded is comparatively slow. We also discuss how these databases work in a distributed environment.","","978-1-5386-0627-8","10.1109/IC3TSN.2017.8284494","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8284494","database;NoSQL;comparison;database systems","NoSQL databases;Scalability;Relational databases;Structured Query Language;Servers;Data models","data handling;data models;data structures;graph theory;relational databases;SQL","NoSQL databases;relational databases;key value stores;graph databases;wide column stores;document store;functional features;nonfunctional features;MongoDB;Cassandra;Redis;Neo4j;anin-memory store;highly interconnected data;CAP theorem;evolving data models;JSON format;distributed environment","","3","","45","","8 Feb 2018","","","IEEE","IEEE Conferences"
"The Transformation of Relational Database to Wide Column Store Database","J. -K. Chen; W. -Z. Lee","Chaoyang University of Technology,Dept. of Information Management,Taichung,Taiwan; Chaoyang University of Technology,Dept. of Information Management,Taichung,Taiwan","2020 International Symposium on Computer, Consumer and Control (IS3C)","8 Apr 2021","2020","","","384","386","Due to the popularity of big data applications, such as social networking, e-commerce, etc., companies need to quickly access huge amounts of data. Under such conditions, a relational database (RDB) cannot meet the demand, and more and more companies decide to switch to NoSQL database to maintain competitiveness. It's necessary to convert data from an RDB to a NoSQL database for the companies that have a lot of operation data in an RDB. Therefore, this paper proposes an algorithm to explore how to convert the schema of RDB into the ones of Wide Column Store DB (WCSDB), and how to import actual data from an RDB into a WCSDB.","","978-1-7281-9362-5","10.1109/IS3C50286.2020.00105","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9394106","Big Data;RDB;NoSQL Database;Wide Column Store Database;Data Transformation","Social networking (online);NoSQL databases;Companies;Relational databases;Switches;Big Data applications;Business","Big Data;NoSQL databases;relational databases;storage management","relational database transformation;Big Data;RDB;NoSQL database;wide column store database;wide column store DB;WCSDB","","","","10","","8 Apr 2021","","","IEEE","IEEE Conferences"
"Review of NoSQL Data Stores: Using a reactive three-tier application for software developers to achieve a high availability application design architecture","W. Hendricks","Cape Peninsula University of Technology,IT academic department,Cape Town,South Africa","2019 Open Innovations (OI)","21 Nov 2019","2019","","","71","77","Every software developer needs to understand that the application architecture is essential. Despite this, many software developers follow the design of software architects and believe that software architects are always right. Changes in the design and application requirements have changed in the last years. However, with the rise of the World Wide Web (WWW), software developers had to store more data on servers. Relational databases cannot scale the data fast enough on web servers. Applications are deployed on every mobile device to cloud devices hosted on servers, and because of this change, users expect faster response times. There is minimal empirical evidence to help developers choose which data store to use. In addition, more NoSQL data stores are added to the ecosystem. In this paper, we used a systematic review to collect evidence on the best performing data store for a highly available application design architecture. This review allowed us to study experiments performed by researchers on NoSQL data stores namely wide-column, key-value, graph and document stores and which programming language driver to use for implementing such research. Our empirical findings suggest to develop a conceptual framework to design a reactive three-tier application for software developers to achieve a high availability application design architecture.","","978-1-7281-3464-2","10.1109/OI.2019.8908187","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8908187","NoSQL;reactive;applications;databases;developers;data;three-tier applications;cloud","Systematics;Software;NoSQL databases;Bibliographies;Relational databases;Reliability","","","","1","","22","","21 Nov 2019","","","IEEE","IEEE Conferences"
"An Open Tool Architecture for Security Testing of NoSQL-Based Applications","A. Algarni; F. Alsolami; F. Eassa; K. Alsubhi; K. Jambi; M. Khemakhem","CS Dept., King Abdulaziz Univ., Jeddah, Saudi Arabia; CS Dept., King Abdulaziz Univ., Jeddah, Saudi Arabia; CS Dept., King Abdulaziz Univ., Jeddah, Saudi Arabia; CS Dept., King Abdulaziz Univ., Jeddah, Saudi Arabia; CS Dept., King Abdulaziz Univ., Jeddah, Saudi Arabia; CS Dept., King Abdulaziz Univ., Jeddah, Saudi Arabia","2017 IEEE/ACS 14th International Conference on Computer Systems and Applications (AICCSA)","12 Mar 2018","2017","","","220","225","Injection attacks remain yet one of the major challenges in non-relational data stores or NoSQL databases. Indeed, such databases are intended to store big data and are classified into four categories; Key-values Stores, Wide Column Stores, Document Stores, and Graph Databases. The different vulnerabilities of these NoSQL databases have attracted many researchers to attempt solving or mitigating this problem. Unfortunately, extensive experiments have revealed that all proposed approaches and techniques are away from the expectations. This is due mainly to their focusing only either on some parts of the problem or on a specific NoSQL engine. In this paper, we propose an open tool architecture which can take into consideration any NoSQL engines belonging to the four data stores categories whatever the programming language used. The proposed tool architecture is able to detect first vulnerable statements in the static mode on the developer side. Second, it detects also automatically injection attacks during run-time on the server side thanks to the added instrumenting statements during the first control (static mode). The easy expansion and adaptation of the proposed tool to any NoSQL engine and/or any kind of attacks and/or programming languages makes it very attractive compared the existing ones. Indeed nowadays, we observe the emergence of new kinds of attacks once a new security approach or framework or technique is proposed.","2161-5330","978-1-5386-3581-0","10.1109/AICCSA.2017.44","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8308289","NoSQL databases;injection attacks;security testing","Security;NoSQL databases;Big Data;Tools;Computer architecture;Engines","Big Data;cloud computing;data handling;database management systems;mobile computing;relational databases;security of data;SQL","Graph Databases;NoSQL databases;open tool architecture;static mode;injection attacks;security approach;nonrelational data stores;big data;Key-values Stores;Wide Column Stores;Document Stores;NoSQL engines","","","","18","","12 Mar 2018","","","IEEE","IEEE Conferences"
"A study into the capabilities of NoSQL databases in handling a highly heterogeneous tree","D. Jayathilake; C. Sooriaarachchi; T. Gunawardena; B. Kulasuriya; T. Dayaratne","99X Technology, Colombo, 65, Walukarama Road, Colombo 3, Sri Lanka; 99X Technology, Colombo, 65, Walukarama Road, Colombo 3, Sri Lanka; 99X Technology, Colombo, 65, Walukarama Road, Colombo 3, Sri Lanka; 99X Technology, Colombo, 65, Walukarama Road, Colombo 3, Sri Lanka; 99X Technology, Colombo, 65, Walukarama Road, Colombo 3, Sri Lanka","2012 IEEE 6th International Conference on Information and Automation for Sustainability","28 Jan 2013","2012","","","106","111","This paper comprehends our work on assessing the feasibility of utilizing different NoSQL databases in handling a huge tree data structure with heterogeneous nodes in which heterogeneity implies that each node can embody a unique attribute set. It is a prominent requirement arising in structured log analysis where constituents in a software log file are scrutinized hierarchically. Traditional pills from relational databases fail in handling this efficiently. We lean towards NoSQL paradigm, which has been emerging as a prominent solution for dealing with high volumes of data with localized characteristics. Our exploration probes five different NoSQL models: wide column store, document store, tuple store, graph databases and multi-model databases that collectively account for a large fraction of the entire NoSQL spectrum. An experiment is designed to measure database performance against a generic tree API focusing on node insertion, node query and attribute-value query. The API is then implemented in a database selected from each of the five NoSQL models in concern. Implementations are used for testing the database performance with respect to the three operations by measuring time taken for a batch of similar operations in a machine with average hardware and software configuration. A summary of experiment results is provided along with the details on tree implementation methodology in each database. A discussion that highlights the congruence between observed performance differences among databases and the theoretical NoSQL models they represent is also included.","2151-1810","978-1-4673-1975-1","10.1109/ICIAFS.2012.6419890","","https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6419890","","Servers;Arrays;Indexing;Time measurement;Distributed databases","application program interfaces;distributed databases;SQL;tree data structures;trees (mathematics)","NoSQL databases;highly heterogeneous tree handling;huge tree data structure handling;heterogeneous nodes;attribute set;structured log analysis;software log file;localized characteristics;wide column store;document store;tuple store;graph databases;multimodel databases;NoSQL spectrum;generic tree API;node insertion;node query;attribute-value query;database performance testing;hardware configuration;software configuration","","9","","23","","28 Jan 2013","","","IEEE","IEEE Conferences"
